@model Inventory.Web.ViewModels.AssetListVM

@{
    ViewBag.Title = ViewBag.PageName;
}

<div class="container">

    @using (Html.BeginForm(null, null, null, FormMethod.Post, new { @id = "EditAssetList" }))

    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Edit - @ViewBag.PageName</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.OriginalName)
            @Html.HiddenFor(model => model.OriginalDescription)
            @Html.HiddenFor(model => model.OriginalAssetTypeId)
            @Html.HiddenFor(model => model.ItemCount)
            @Html.HiddenFor(model => model.PreviousUrl)

            <div class="form-group row was-validated" id="NameDiv">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @id = "Name", @class = "form-control", @maxlength = "50", @required = "true", @pattern = "^[a-zA-Z0-9' '_/&.-]*$" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row" id="DescriptioneDiv">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @id = "Description", @class = "form-control", @maxlength = "150" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row" id="ItemCountDiv">
                @Html.LabelFor(model => model.ItemCount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.ItemCount, new { htmlAttributes = new { @name = "ItemCounts", @id = "ItemCounts", @class = "form-control", @maxlength = "150", @disabled = "true" } })
                    @Html.ValidationMessageFor(model => model.ItemCount, "", new { @class = "text-danger" })
                </div>
            </div>

            @if (Model.ItemCount > 0)
            {
            <div class="form-group row was-validated" id="AssetTypeDiv">
                    @Html.LabelFor(model => model.AssetType, htmlAttributes: new { @class = "control-label col-md-3 col-lg-2 col-xl-2" })
                <div class="col-md-6 col-lg-5 col-xl-4">
                    @Html.DropDownListFor(model => model.AssetTypeId, new SelectList(Model.AssetTypes, "Id", "Name"), "Please Select", new { @id = "AssetType", @class = "form-control", @required = "true", @disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.AssetTypeId, "", new { @class = "text-danger" })
                </div>
            </div>
            }
            else
            {
            <div class="form-group row was-validated" id="AssetTypeDiv">
                    @Html.LabelFor(model => model.AssetType, htmlAttributes: new { @class = "control-label col-md-3 col-lg-2 col-xl-2" })
                <div class="col-md-6 col-lg-5 col-xl-4">
                    @Html.DropDownListFor(model => model.AssetTypeId, new SelectList(Model.AssetTypes, "Id", "Name"), "Please Select", new { @id = "AssetType", @class = "form-control", @required = "true" })
                    @Html.ValidationMessageFor(model => model.AssetTypeId, "", new { @class = "text-danger" })
                </div>
            </div>
            }

            <div class="form-group row" id="SharedDiv">
                @Html.LabelFor(model => model.Shared, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-2">
                    @Html.DropDownListFor(model => model.Shared, new SelectList(CustomExtensions.Statuses, "Value", "Text"), null, new { @id = "Shared", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Shared, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row" >
                <div class="col-md-offset-2 col-md-4">
                    @if (!string.IsNullOrEmpty(Model.PreviousUrl) && !Model.PreviousUrl.Contains("Details"))
                    {
                        <a href="@Model.PreviousUrl" class="btn btn-secondary" role="button" aria-disabled="true">Back to List</a>
                    }
                    else
                    {
                        @Html.ActionLink("Back to List", "Index", "AssetList", null, new { @class = "btn btn-secondary" })
                    }
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
            </div>

        </div>
    }
</div>


@section Scripts {

    <script type="text/javascript">
        $(function () {
            Common.PhoneFormat();
        });
    </script>

}
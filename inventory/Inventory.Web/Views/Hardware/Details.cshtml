@model Inventory.Web.ViewModels.AssetVM

@{
    ViewBag.Title = ViewBag.AssetType;
}

<div class="container">

    <div class="form-horizontal">
        <h4>Details - @ViewBag.AssetType</h4>
        <hr>

        <div class="form-group row">
            @Html.LabelFor(model => model.PONumber, htmlAttributes: new { @class = "control-label col-md-3 col-lg-2 col-xl-2 font-weight-bold" })
            <div class="col-md-5">
                @if ((User.Identity.IsAuthenticated) && (User.IsInRole("InvoicesView")))
                {
                    @Html.ActionLink(Model.PONumber, "Index", "Invoice", new { SearchString = Model.PONumber }, new { @class = "text-decoration-none" })
                }
                else
                {
                    @Html.DisplayFor(model => model.PONumber)
                }
            </div>
        </div>

        <div class="form-group row" id="InvoiceItemNoDiv">
            @Html.LabelFor(model => model.InvoiceAndInvoiceItem, htmlAttributes: new { @class = "control-label col-md-3 col-lg-2 col-xl-2 font-weight-bold" })
            <div class="col-md-5">
                @if ((User.Identity.IsAuthenticated) && (User.IsInRole("InvoicesItemsView")))
                {
                    @Html.ActionLink(Model.InvoiceAndInvoiceItem, "Index", "InvoiceItem", new { SearchString = Model.InvoiceAndInvoiceItem }, new { @class = "text-decoration-none" })
                }
                else
                {
                    @Html.DisplayFor(model => model.InvoiceAndInvoiceItem)
                }
            </div>
        </div>

        <div class="form-group row" id="CategoryDiv">
            @Html.LabelFor(model => model.AssetCategoryName, htmlAttributes: new { @class = "control-label col-md-3 col-lg-2 col-xl-2 font-weight-bold" })
            <div class="col-md-5">
                @Html.DisplayFor(model => model.AssetCategoryName)
            </div>
        </div>

        <div class="form-group row" id="ManuDiv">
            <label class="control-label col-md-3 col-lg-2 col-xl-2 font-weight-bold">Make</label>
            <div class="col-md-5">
                @Html.DisplayFor(model => model.ManufacturerName)
            </div>
        </div>

        <div class="form-group row" id="ProductDiv">
            <label class="control-label col-md-3 col-lg-2 col-xl-2 font-weight-bold">Model</label>
            <div class="col-md-5">
                @Html.DisplayFor(model => model.ProductName)
            </div>
        </div>

        <div class="form-group row" id="NameDiv" style="@(Model.AssetCategoryName ==  "Desktop" || Model.AssetCategoryName  == "Laptop" || Model.AssetCategoryName == "Server" || Model.AssetCategoryName == "Switch" || Model.AssetCategoryName == "Printer" ? "" : "display:none")">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-3 col-lg-2 col-xl-2 font-weight-bold" })
            <div class="col-md-5">
                @Html.DisplayFor(model => model.Name)
            </div>
        </div>

        <div class="form-group row" id="ConnectedAssetDiv" style="@(Model.AssetCategoryName !=  "Desktop" && Model.AssetCategoryName  != "Laptop" && Model.AssetCategoryName != "Server" ? "" : "display:none")">
            @Html.LabelFor(model => model.ConnectedAsset, htmlAttributes: new { @class = "control-label col-md-3 col-lg-2 col-xl-2 font-weight-bold" })
            <div class="col-md-5">
                @if (Model.ConnectedAsset.AssetNameOrSerial != null)
                {
                    @Html.ActionLink(Model.ConnectedAsset.AssetNameOrSerial, "Index", "Hardware", new { assetId = Model.ConnectedAssetId }, new { @class = "text-decoration-none" })
                }
                else
                {
                    <font>N/A</font>
                }
            </div>
        </div>

        <div class="form-group row" id="ConnectedAssetsDiv" style="@(Model.AssetCategoryName ==  "Desktop" || Model.AssetCategoryName  == "Laptop" || Model.AssetCategoryName == "Server" ? "" : "display:none")">
            @Html.LabelFor(model => model.ConnectedAssetNames, htmlAttributes: new { @class = "control-label col-md-3 col-lg-2 col-xl-2 font-weight-bold" })
            <div class="col-md-5">
                @foreach (var item in Model.ConnectedAssets)
                {
                    @Html.ActionLink(item.ConnectedAssetNameAndAssetCategory + ", ", "Index", "Hardware", new { assetId = item.Id }, new { @class = "text-decoration-none", @Title = "" })
                }
            </div>
        </div>

        <div class="form-group row" id="DescriptionDiv">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-3 col-lg-2 col-xl-2 font-weight-bold" })
            <div class="col-md-5">
                @Html.DisplayFor(model => model.Description)
            </div>
        </div>

        <div class="form-group row" id="DrawerDiv" style="@(Model.AssetCategoryName ==  "Desktop" || Model.AssetCategoryName  == "Laptop" || Model.AssetCategoryName == "Server" ? "" : "display:none")">
            @Html.LabelFor(model => model.Drawer, htmlAttributes: new { @class = "control-label col-md-3 col-lg-2 col-xl-2 font-weight-bold" })
            <div class="col-md-5">
                @Html.DisplayFor(model => model.Drawer)
            </div>
        </div>

        <div class="form-group row" id="DateReceivedDiv">
            @Html.LabelFor(model => model.DateReceived, htmlAttributes: new { @class = "control-label col-md-3 col-lg-2 col-xl-2 font-weight-bold" })
            <div class="col-md-5">
                @(Model.DateReceived?.ToString("MM/dd/yyyy"))
            </div>
        </div>

        <div class="form-group row" id="SerialDiv">
            @Html.LabelFor(model => model.Serial, htmlAttributes: new { @class = "control-label col-md-3 col-lg-2 col-xl-2 font-weight-bold" })
            <div class="col-md-5">
                @Html.DisplayFor(model => model.Serial)
            </div>
        </div>

        <div class="form-group row" id="AssetTagDiv">
            @Html.LabelFor(model => model.AssetTag, htmlAttributes: new { @class = "control-label col-md-3 col-lg-2 col-xl-2 font-weight-bold" })
            <div class="col-md-5">
                @Html.DisplayFor(model => model.AssetTag)
            </div>
        </div>

        <div class="form-group row" id="IPAddressDiv" style="@(Model.AssetCategoryName != "Monitor" ? "" : "display:none")">
            @Html.LabelFor(model => model.IPAddress, htmlAttributes: new { @class = "control-label col-md-3 col-lg-2 col-xl-2 font-weight-bold" })
            <div class="col-md-5">
                @Html.DisplayFor(model => model.IPAddress)
            </div>
        </div>

        <div class="form-group row" id="MacAddressDiv" style="@(Model.AssetCategoryName != "Monitor" ? "" : "display:none")">
            @Html.LabelFor(model => model.MacAddress, htmlAttributes: new { @class = "control-label col-md-3 col-lg-2 col-xl-2 font-weight-bold" })
            <div class="col-md-5">
                @Html.DisplayFor(model => model.MacAddress)
            </div>
        </div>

        <div class="form-group row" id="ExpirationDateDiv">
            @Html.LabelFor(model => model.ExpirationDate, htmlAttributes: new { @class = "control-label col-md-3 col-lg-2 col-xl-2 font-weight-bold" })
            <div class="col-md-5">
                @Html.DisplayFor(model => model.ExpirationDate)
            </div>
        </div>

        <div class="form-group row" id="SupplierDiv">
            @Html.LabelFor(model => model.SupplierName, htmlAttributes: new { @class = "control-label col-md-3 col-lg-2 col-xl-2 font-weight-bold" })
            <div class="col-md-5">
                @Html.DisplayFor(model => model.SupplierName)
            </div>
        </div>

        <div class="form-group row" id="UnitPriceDiv">
            @Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "control-label col-md-3 col-lg-2 col-xl-2 font-weight-bold" })
            <div class="col-md-5">
                @Html.DisplayFor(model => model.UnitPrice)
            </div>
        </div>

        <div class="form-group row" id="PurchaseDateDiv">
            @Html.LabelFor(model => model.PurchaseDate, htmlAttributes: new { @class = "control-label col-md-3 col-lg-2 col-xl-2 font-weight-bold" })
            <div class="col-md-5">
                @Html.DisplayFor(model => model.PurchaseDate)
            </div>
        </div>

        <div class="form-group row" id="StatusDiv">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-3 col-lg-2 col-xl-2 font-weight-bold" })
            <div class="col-md-5">
                @Html.DisplayFor(model => model.Status.Name)
            </div>
        </div>

        <div class="form-group row" id="SurplusDateDiv" style="@(Model.Status.Name == "Surplus" ? "" : "display:none")">
            @Html.LabelFor(model => model.SurplusDate, htmlAttributes: new { @class = "control-label col-md-3 col-lg-2 col-xl-2 font-weight-bold" })
            <div class="col-md-5">
                @(Model.SurplusDate?.ToString("MM/dd/yyyy"))
            </div>
        </div>

        <div class="form-group row" id="SNFnumberDiv" style="@(Model.Status.Name == "Surplus" ? "" : "display:none")">
            @Html.LabelFor(model => model.SNFnumber, htmlAttributes: new { @class = "control-label col-md-3 col-lg-2 col-xl-2 font-weight-bold" })
            <div class="col-md-5">
                @Html.DisplayFor(model => model.SNFnumber)
            </div>
        </div>

        <div class="form-group row" id="SpecsDiv">
            @Html.LabelFor(model => model.InvoiceItem.Specifications, htmlAttributes: new { @class = "control-label col-md-3 col-lg-2 col-xl-2 font-weight-bold" })
            <div class="col-md-5">
                @Html.DisplayFor(model => model.InvoiceItem.Specifications)
            </div>
        </div>

        <div class="form-group row" id="LocationDiv">
            @Html.LabelFor(model => model.FullLocation, htmlAttributes: new { @class = "control-label col-md-3 col-lg-2 col-xl-2 font-weight-bold" })
            <div class="col-md-7 col-lg-6 col-xl-5">
                @Html.DisplayFor(model => model.FullLocation)
            </div>
        </div>

        <div class="form-group row" id="LastLoginDateDiv" style="@(Model.AssetCategoryName == "Desktop" ? "" : "display:none")">
            @Html.LabelFor(model => model.LastLoginDate, htmlAttributes: new { @class = "control-label col-md-3 col-lg-2 col-xl-2 font-weight-bold" })
            <div class="col-md-5">
                @(Model.LastLoginDate?.ToString("MM/dd/yyyy"))
            </div>
        </div>

        <div class="form-group row" id="LastBootDateDiv" style="@(Model.AssetCategoryName == "Desktop" ? "" : "display:none")">
            @Html.LabelFor(model => model.LastBootDate, htmlAttributes: new { @class = "control-label col-md-3 col-lg-2 col-xl-2 font-weight-bold" })
            <div class="col-md-5">
                @(Model.LastBootDate?.ToString("MM/dd/yyyy"))
            </div>
        </div>

        <div class="form-group row" id="ConfirmedDateDiv" style="@(Model.AssignedUserId != null ? "" : "display:none")">
            @Html.LabelFor(model => model.AssetConfirmedDate, htmlAttributes: new { @class = "control-label col-md-3 col-lg-2 col-xl-2 font-weight-bold" })
            <div class="col-md-5">
                @(Model.AssetConfirmedDate?.ToString("MM/dd/yyyy"))
            </div>
        </div>

        <div class="form-group row" id="AssignedUserDiv">
            <label class="control-label col-md-3 col-lg-2 col-xl-2 font-weight-bold">
                Assigned User
                <a class="text-decoration-none text-secondary" data-toggle="collapse" href="#collapseUser" role="button" aria-expanded="false" aria-controls="collapseUser" style="@(Model.AssignedUserId != null ? "" : "display:none")">
                    <i class="fas fa-lg fa-user"></i>
                </a>
            </label>
            <div class="col-md-5 @(Model.AssignedUser.Active ? "text-break" : "text-break text-danger")">
                @Html.DisplayFor(model => model.AssignedUserName)
            </div>
        </div>

        <div id="collapseUser" class="collapse">
            <div class="form-group row" id="AssignedUserNameDiv" style="@(Model.AssignedUserId != null ? "" : "display:none")">
                <label class="control-label col-md-3 col-lg-2 col-xl-2 font-weight-bold">Assigned UserName</label>
                <div class="col-md-5 @(Model.AssignedUser.Active ? "text-break" : "text-break text-danger")">
                    @Html.DisplayFor(model => model.AssignedUser.UserName)
                </div>
            </div>

            <div class="form-group row" id="AssignedUserTitleDiv" style="@(Model.AssignedUserId != null ? "" : "display:none")">
                <label class="control-label col-md-3 col-lg-2 col-xl-2 font-weight-bold">Assigned Title</label>
                <div class="col-md-5 @(Model.AssignedUser.Active ? "text-break" : "text-break text-danger")">
                    @Html.DisplayFor(model => model.AssignedUser.Title)
                </div>
            </div>

            <div class="form-group row" id="AssignedUserParkDiv" style="@(Model.AssignedUserId != null ? "" : "display:none")">
                <label class="control-label col-md-3 col-lg-2 col-xl-2 font-weight-bold">Assigned Park</label>
                <div class="col-md-5 @(Model.AssignedUser.Active ? "text-break" : "text-break text-danger")">
                    @Html.DisplayFor(model => model.AssignedUser.Park)
                </div>
            </div>

            <div class="form-group row" id="AssignedUserPhoneDiv" style="@(Model.AssignedUserId != null ? "" : "display:none")">
                <label class="control-label col-md-3 col-lg-2 col-xl-2 font-weight-bold">Assigned Phone</label>
                <div class="col-md-5 @(Model.AssignedUser.Active ? "text-break" : "text-break text-danger")">
                    @Html.DisplayFor(model => model.AssignedUser.Phone)
                </div>
            </div>

            <div class="form-group row" id="AssignedUserMobileDiv" style="@(Model.AssignedUserId != null ? "" : "display:none")">
                <label class="control-label col-md-3 col-lg-2 col-xl-2 font-weight-bold">Assigned Cell</label>
                <div class="col-md-5 @(Model.AssignedUser.Active ? "text-break" : "text-break text-danger")">
                    @Html.DisplayFor(model => model.AssignedUser.MobilePhone)
                </div>
            </div>
        </div>

        <div class="form-group row" id="NotesDiv">
            @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-3 col-lg-2 col-xl-2 font-weight-bold" })
            <div class="col-md-5">
                @Html.DisplayFor(model => model.Notes)
            </div>
        </div>

        @if ((User.Identity.IsAuthenticated) && (User.IsInRole("HardwareEdit")))
        {
            <div class="form-group row" id="AuditLogsDiv">
                <label class="control-label col-md-3 col-lg-2 col-xl-2 font-weight-bold">
                    Audit Logs
                    <a class="text-decoration-none text-secondary" data-toggle="collapse" href="#collapseLogs" role="button" aria-expanded="false" aria-controls="collapseLogs">
                        <i class="far fa-lg fa-clipboard"></i>
                    </a>
                </label>
                <div class="col-md-5 text-break">
                </div>
            </div>

            <div id="collapseLogs" class="collapse">

                @if (Model.AuditLogs != null)
                {
                    foreach (var item in @Model.AuditLogs.OrderByDescending(x => x.DateModified))
                    {
                        <div class="form-group row" id="AuditLogDiv">
                            <label class="control-label col-md-3 col-lg-2 col-xl-2 font-weight-bold small">@Html.DisplayFor(model => item.OperationAndDate)</label>
                            <div class="col-md-5 text-break small">
                                @Html.DisplayFor(model => item.ChangeSummary)
                            </div>
                        </div>
                    }
                }

            </div>
        }

    </div>
</div>

<div class="container">
    @if (!string.IsNullOrEmpty(Model.PreviousUrl))
    {
        <a href="@Model.PreviousUrl" class="btn btn-secondary" role="button" aria-disabled="true">Back to List</a>
    }
    else
    {
        @Html.ActionLink("Back to List", "Index", "Hardware", null, new { @class = "btn btn-secondary" })
    }

    @if ((User.Identity.IsAuthenticated) && (User.IsInRole("HardwareEdit")))
    {
        @Html.ActionLink("Edit", "Edit", new { id = Model.Id, previousUrl = Model.PreviousUrl }, new { @class = "btn btn-primary" })
    }
    </div>

<br>
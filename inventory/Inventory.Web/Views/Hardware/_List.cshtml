@model PagedList.IPagedList<Inventory.Web.ViewModels.PagedListVM>

@foreach (var item in Model.Select(x => x.Assets).FirstOrDefault())
{
    <tr class="@(item.AssetStatusGroup != "Active" ? "text-danger" : "")">
    @if ((User.Identity.IsAuthenticated) && ((User.IsInRole("HardwareEdit")) || (User.IsInRole("ManageParkAssets"))))
    {
        <td class="text-center d-print-none">
    @if (item.showCheckBox == true)
    {
        @Html.CheckBox("checkSingle", false, new { @Class = "checkSingle", @Value = item.Id })
    }
    else
    {
        @Html.CheckBox("checkSingle", false, new { disabled = "true" })

    }
        </td>
    }
    <td class="text-center d-print-none">
        @Html.ActionLink(" ", "Index", "Hardware", new { assetCategory = item.InvoiceItem.AssetCategory.Name, assetId = ViewBag.AssetId, showConnectedAssets = ViewBag.ShowConnectedAssets, currentSearch = ViewBag.CurrentSearch, InvoiceItemId = ViewBag.InvoiceItemId }, new { @Class = item.InvoiceItem.AssetCategory.IconCss + " text-decoration-none", @Title = item.InvoiceItem.AssetCategory.Name })
    </td>

    @if (ViewBag.AssetCategory == "Desktop" || ViewBag.AssetCategory == "Laptop" || ViewBag.AssetCategory == "Server" || ViewBag.AssetCategory == "Switch" || ViewBag.AssetCategory == "Printer")
    {
        <td class="text-break d-none d-sm-none d-md-none d-lg-none d-xl-table-cell d-print-table-cell">
            @Html.DisplayFor(modelItem => item.Name)
        </td>
    }
    else
    {
        <td class="d-none d-sm-none d-md-none d-lg-none d-xl-table-cell d-print-table-cell">
            @Html.DisplayFor(modelItem => item.ManufacturerName)
        </td>
    }

    <td class="text-break d-none d-sm-none d-md-table-cell d-lg-table-cell d-xl-table-cell d-print-table-cell">
    @Html.DisplayFor(modelItem => item.ProductName)

    @if (item.ConnectedAssetId != null)
    {
        @Html.ActionLink(" ", "Index", "Hardware", new { assetId = item.ConnectedAssetId, showConnectedAssets = true, sortOrder = ViewBag.ConnectedAssetSortOrder }, new { @Class = item.ConnectedAsset.InvoiceItem.AssetCategory.IconCss + " fa-xs text-decoration-none d-print-none", @Title = "Connected to " + item.ConnectedAsset.InvoiceItem.AssetCategory.Name })
    }

    @if (item.InvoiceItem.AssetCategory.Name == "Desktop" || item.InvoiceItem.AssetCategory.Name == "Laptop" || item.InvoiceItem.AssetCategory.Name == "Server")
    {
        foreach (var asset in item.ConnectedAssets.OrderBy(x => x.InvoiceItem.AssetCategory.Name))
        {
            @Html.ActionLink(" ", "Index", "Hardware", new { assetId = asset.ConnectedAssetId, showConnectedAssets = true, sortOrder = ViewBag.ConnectedAssetSortOrder }, new { @Class = asset.InvoiceItem.AssetCategory.IconCss + " fa-xs pr-1 text-decoration-none d-print-none", @Title = "Connected to " + asset.InvoiceItem.AssetCategory.Name })
        }
    }
    </td>
        @if (ViewBag.AssetCategory == "Desktop" || ViewBag.AssetCategory == "Laptop" || ViewBag.AssetCategory == "Server")
        {
            <td class="d-none d-sm-none d-md-none d-lg-table-cell d-xl-table-cell d-print-table-cell">
                @Html.DisplayFor(modelItem => item.Drawer)
            </td>
        }
    <td class="d-none d-sm-table-cell d-md-table-cell d-lg-table-cell d-xl-table-cell d-print-table-cell">
        @Html.DisplayFor(modelItem => item.AssetTag)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Serial)
    </td>
    @if (ViewBag.ActiveStatus == 7)
    {
        <td>
            @Html.DisplayFor(modelItem => item.SNFnumber)
        </td>
    }
    else
    {
        <td class="@(item.AssignedUser != null && item.AssignedUser.Active ? "text-break" : "text-break text-danger") d-none d-sm-none d-lg-none d-xl-table-cell d-print-none" title="@(item.AssignedUser.UserName)">
            @Html.DisplayFor(modelItem => item.AssignedUser.LastNameFirstName)
        </td>
        <td class="@(item.AssignedUser != null && item.AssignedUser.Active ? "text-break" : "text-break text-danger") d-none d-sm-none d-lg-table-cell d-xl-none d-print-table-cell" title="@(item.AssignedUser.UserName)">
            @Html.DisplayFor(modelItem => item.AssignedUser.LastNameFirstInitial)
        </td>
    }
    <td class="text-center">
        @Html.DisplayFor(modelItem => item.LocationCode)
    </td>
    <td class="d-none d-sm-none d-lg-none d-xl-table-cell d-print-table-cell">
        @Html.DisplayFor(modelItem => item.Building.DisplayName)
    </td>
    <td class="text-center d-none d-sm-none d-lg-table-cell d-xl-table-cell d-print-table-cell">
        @Html.DisplayFor(modelItem => item.Room.DisplayName)
    </td>
    <td class="text-center d-print-none">
        @Html.ActionLink(item.InvoiceAndInvoiceItem, "Index", "InvoiceItem", new { InvoiceItemId = item.InvoiceItemId }, new { @Title = "InvoiceItem", @class = "text-decoration-none" })
    </td>
    <td class="one text-center">
        @Html.DisplayFor(modelItem => item.Status.Name)
    </td>
    <td class="two text-center d-print-none">
        <span style="color: @item.Status.ColorCss"><i class="@item.Status.IconCss" title="@item.Status.Name"></i></span>
    </td>
    <td class="d-print-none text-center">
    <div class="btn-group">
        @if ((User.Identity.IsAuthenticated) && (User.IsInRole("HardwareEdit")))
        {
            <a href="@Url.Action("Edit", "Hardware", new { id = item.Id })" class="btn-sm btn-light">
                <i class="fa fa-edit"></i>
            </a>
        }
    @if ((User.Identity.IsAuthenticated) && ((User.IsInRole("HardwareView")) || (User.IsInRole("ManageParkAssets"))))
    {
        <a href="@Url.Action("Details", "Hardware", new { id = item.Id })" class="btn-sm btn-light">
            <i class="fa fa-list"></i>
        </a>
    }
    @if ((User.Identity.IsAuthenticated) && (User.IsInRole("HardwareDelete")))
    {
        <a href="@Url.Action("Delete", "Hardware", new { id = item.Id })" class="btn-sm btn-light">
            <i class="fa fa-times-circle"></i>
        </a>
    }
    </div>
    </td>
</tr>
}


@model Inventory.Web.ViewModels.ProductVM

@{
    ViewBag.Title = ViewBag.AssetType;
}

<div class="container">

    @using (Html.BeginForm(null, null, null, FormMethod.Post, new { @id = "EditProduct" }))

    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Edit - @ViewBag.AssetType</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.OriginalName)
        @Html.HiddenFor(model => model.OriginalDisplayName)
        @Html.HiddenFor(model => model.OriginalAssetTypeId)
        @Html.HiddenFor(model => model.OriginalAssetCategoryId)
        @Html.HiddenFor(model => model.OriginalManuId)
        @Html.HiddenFor(model => model.Manufacturer.Id)
        @Html.HiddenFor(model => model.Manufacturer.DisplayName)
        @Html.HiddenFor(model => model.InvoiceItemCount)
        @Html.HiddenFor(model => model.AssetType.Id)
        @Html.HiddenFor(model => model.PreviousUrl)

        <div class="form-group row" id="WarningDiv">
            <label class="control-label col-md-6 h6 text-danger">@ViewBag.Warning</label>
        </div>

        <div class="form-group row was-validated" id="TypeDiv">
            @Html.LabelFor(model => model.AssetType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.DropDownListFor(model => model.AssetTypeId, new SelectList(Model.AssetTypes, "Id", "Name"), "Please Select", new { @id = "AssetType", @class = "form-control", @required = "true" })
                @Html.ValidationMessageFor(model => model.AssetTypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row was-validated" id="CategoryDiv">
            @Html.LabelFor(model => model.AssetCategory, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.DropDownListFor(model => model.AssetCategoryId, new SelectList(Model.AssetCategories, "Id", "Name"), "Please Select", new { @id = "AssetCategory", @class = "form-control", @required = "true" })
                @Html.ValidationMessageFor(model => model.AssetCategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row was-validated" id="ManuDiv">
            <label class="control-label col-md-2" id="ManuLabel">Manufacturer</label>
            <div class="col-md-5">
                @Html.DropDownListFor(model => model.ManuId, new SelectList(Model.Manufacturers, "Id", "DisplayName"), "Please Select", new { @id = "Manufacturer", @class = "form-control", @required = "true" })
                @Html.ValidationMessageFor(model => model.ManuId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row was-validated" id="NameDiv">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @id = "Name", @class = "form-control", @maxlength = "50", @required = "true", @pattern = "^[a-zA-Z0-9' '_/&.-]*$" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row" id="DisplayNameDiv">
            @Html.LabelFor(model => model.DisplayName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.DisplayName, new { htmlAttributes = new { @id = "DisplayName", @class = "form-control", @maxlength = "50", @pattern = "^[a-zA-Z0-9' '_/&.-]*$" } })
                @Html.ValidationMessageFor(model => model.DisplayName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row" id="DescriptioneDiv">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @id = "Description", @class = "form-control", @maxlength = "150" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row" id="ActiveDiv">
            @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.DropDownListFor(model => model.Active, new SelectList(CustomExtensions.Statuses, "Value", "Text"), null, new { @id = "Active", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row" id="NotesDiv">
            @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control", @maxlength = "500", @rows = "5" } })
                @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row" id="HardwareDiv">
            <div class="col-md-offset-2 col-md-4">
                @if (!string.IsNullOrEmpty(Model.PreviousUrl) && !Model.PreviousUrl.Contains("Details"))
                {
                    <a href="@Model.PreviousUrl" class="btn btn-secondary" role="button" aria-disabled="true">Back to List</a>
                }
                else
                {
                    @Html.ActionLink("Back to List", "Index", "Product", null, new { @class = "btn btn-secondary" })
                }
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>


    </div>
    }
</div>

@section Scripts {

    <script type="text/javascript">
        $(function () {
            Product.GetAssetCategories("../../Asset/Categories");
        });
    </script>

}
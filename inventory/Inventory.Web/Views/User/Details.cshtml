@model Inventory.Web.ViewModels.UserVM

@{
    ViewBag.Title = ViewBag.AssetType;
}

<div class="container">

    <div class="form-horizontal">
        <h4>Details - @ViewBag.AssetType</h4>
        <hr>

        <div class="form-group row" id="NameDiv">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
            <div class="col-md-4">
                @Html.DisplayFor(model => model.Name)
            </div>
        </div>

        <div class="form-group row" id="TitleDiv">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
            <div class="col-md-4">
                @Html.DisplayFor(model => model.Title)
            </div>
        </div>

        <div class="form-group row" id="UserNameDiv">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
            <div class="col-md-4">
                @Html.DisplayFor(model => model.UserName)
            </div>
        </div>

        <div class="form-group row" id="ManagerDiv">
            @Html.LabelFor(model => model.Manager, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
            <div class="col-md-4">
                @if (Model.ManagerId != null)
                {
                    @Html.ActionLink(Model.Manager.NameWithUserName, "Details", "User", new { Id = Model.ManagerId, previousUrl = Model.PreviousUrl }, new { @class = Model.Manager.Active == false ? "text-break text-danger text-decoration-none" : "text-decoration-none" })
                }
                else
                {
                    @Html.DisplayFor(model => model.ManagerName)
                }
            </div>
        </div>

        @if (Model.UsersManaged.Count() > 0)
        {
            <div class="form-group row" id="UsersManagedDiv">
                <label class="control-label col-md-3 col-lg-2 col-xl-2 font-weight-bold">Users Managed</label>
                <div class="col-md-4">

                    @foreach (var item in Model.UsersManaged.OrderBy(x => x.Name))
                    {
                        @Html.ActionLink(item.NameWithUserName + ", ", "Details", "User", new { Id = item.Id, previousUrl = Model.PreviousUrl }, new { @class = item.Active == false ? "text-break text-danger text-decoration-none" : "text-decoration-none" })
                    }
                </div>
            </div>
        }

        <div class="form-group row" id="DivisionDiv">
            @Html.LabelFor(model => model.Division, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
            <div class="col-md-4">
                @Html.DisplayFor(model => model.Division)
            </div>
        </div>

        <div class="form-group row" id="ParkDiv">
            @Html.LabelFor(model => model.Park, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
            <div class="col-md-4">
                @Html.DisplayFor(model => model.Park)
            </div>
        </div>

        <div class="form-group row" id="EmailDiv">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
            <div class="col-md-4">
                @Html.DisplayFor(model => model.Email)
            </div>
        </div>

        <div class="form-group row" id="PhoneDiv">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
            <div class="col-md-4">
                @Html.DisplayFor(model => model.Phone)
            </div>
        </div>

        <div class="form-group row" id="MobilePhoneDiv">
            @Html.LabelFor(model => model.MobilePhone, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
            <div class="col-md-4">
                @Html.DisplayFor(model => model.MobilePhone)
            </div>
        </div>

        <div class="form-group row" id="ActiveDiv">
            @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
            <div class="col-md-4">
                @Html.YesNo(Model.Active)
            </div>
        </div>

        <div class="form-group row" id="LastLoginDiv">
            @Html.LabelFor(model => model.InventoryLastLoginDate, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
            <div class="col-md-4">
                @(Model.InventoryLastLoginDate?.ToString("MM/dd/yyyy"))
            </div>
        </div>

        <div class="form-group row" id="LastLogonDiv">
            @Html.LabelFor(model => model.ADLastLogonDate, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
            <div class="col-md-4">
                @(Model.ADLastLogonDate?.ToString("MM/dd/yyyy"))
            </div>
        </div>

        <div class="form-group row" id="UserRoleDiv">
            @Html.LabelFor(model => model.UserRoles, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
            <div class="col-md-4">
                @Html.DisplayFor(model => model.UserRoleNames)
            </div>
        </div>

        <div class="form-group row" id="NotesDiv">
            @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
            <div class="col-md-4">
                @Html.DisplayFor(model => model.Notes)
            </div>
        </div>
    </div>
</div>

<div class="container">
    @if (!string.IsNullOrEmpty(Model.PreviousUrl))
    {
        <a href="@Model.PreviousUrl" class="btn btn-secondary" role="button" aria-disabled="true">Back to List</a>
    }
    else
    {
        @Html.ActionLink("Back to List", "Index", "User", null, new { @class = "btn btn-secondary" })
    }
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id, previousUrl = Model.PreviousUrl }, new { @class = "btn btn-primary" })
</div>

<br>
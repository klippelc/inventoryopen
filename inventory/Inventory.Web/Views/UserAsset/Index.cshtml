@model PagedList.IPagedList<Inventory.Web.ViewModels.PagedListVM>
@using PagedList.Mvc;

@{
    ViewBag.Title = ViewBag.PageName;
    var TotalItems = String.Format("{0:N0}", Model.TotalItemCount);
    var usersManaged = Model.Select(x => x.UsersManaged).FirstOrDefault();
    var manager = usersManaged.Select(x => x.ManagerName).FirstOrDefault();
}

<style>
    .pagination {
        margin: 0px;
    }
</style>

<div class="container maxwidth">
    <div class="form-group row m-0 p-0">
        <label class="h2 pr-3">@ViewBag.PageName</label>
        <div class="m-0 pl-0 pt-1" style="@(usersManaged.Count() > 0 ? "width:305px;" : "display:none;")">
            @Html.DropDownList("muId", new SelectList(usersManaged, "Id", "Name"), manager ?? "Please Select", new { @id = "ManagedUsers", @class = "form-control form-control-sm border selectpicker", @onchange = "window.location.href = '?muId=' + this.options[this.selectedIndex].value;" })
        </div>
    </div>

    @using (Html.BeginForm("Index", null, FormMethod.Get))
    {
        if (ViewBag.InvoiceItemId != null)
        {
            <input type="hidden" name="InvoiceItemId" value="@ViewBag.InvoiceItemId" />
        }
        if (ViewBag.AssetCategory != null)
        {
            <input type="hidden" name="AssetCategory" value="@ViewBag.AssetCategory" />
        }
        if (ViewBag.AssetId != null)
        {
            <input type="hidden" name="AssetId" value="@ViewBag.AssetId" />
        }
        if (ViewBag.ShowConnectedAssets != null)
        {
            <input type="hidden" name="ShowConnectedAssets" value="@ViewBag.ShowConnectedAssets" />
        }
        if (ViewBag.CurrentSort != null)
        {
            <input type="hidden" name="sortOrder" value="@ViewBag.CurrentSort" />
        }
        if (ViewBag.Manufacturer != null)
        {
            <input type="hidden" name="manuId" value="@ViewBag.Manufacturer" />
        }
        if (ViewBag.Product != null)
        {
            <input type="hidden" name="productId" value="@ViewBag.Product" />
        }
        if (ViewBag.ManagedUserId != null)
        {
            <input type="hidden" name="muId" value="@ViewBag.ManagedUserId" />
        }

        <div class="row mb-0">
            <div class="col-sm-12">
                <font class="small">Total Items: @TotalItems</font>
                <font class="medium">|</font>
                @Html.ActionLink(" ", "ExportToExcel", "UserAsset", new { muId = ViewBag.ManagedUserId, manuId = ViewBag.Manufacturer, productId = ViewBag.Product, assetCategory = ViewBag.AssetCategory, activeStatus = ViewBag.ActiveStatus, assetId = ViewBag.AssetId, showConnectedAssets = ViewBag.ShowConnectedAssets, sortOrder = ViewBag.CurrentSort, currentSearch = ViewBag.CurrentSearch, invoiceItemId = ViewBag.InvoiceItemId }, new { @Class = "far fa-file-excel text-decoration-none d-print-none", @Title = "Excel" })
                @Html.ActionLink(" ", "Index", null, new { @Onclick = "window.print();", @Class = "fas fa-print text-decoration-none d-print-none", @Title = "Print" })
            </div>
        </div>

        <div class="row mb-1 align-items-end d-print-none">
            <div class="col-xl-9 align-middle">
                @Html.ActionLink("| Filter: ", "Index", new { muId = ViewBag.ManagedUserId, sortOrder = ViewBag.CurrentSort, currentSearch = ViewBag.CurrentSearch, InvoiceItemId = ViewBag.InvoiceItemId }, new { @class = "small text-dark text-decoration-none" })
                @if (Model.Select(x => x.ConnectedAsset).FirstOrDefault())
                {
                    @Html.ActionLink("Connected, ", "Index", "UserAsset", new { showConnectedAssets = true, activeStatus = ViewBag.ActiveStatus, muId = ViewBag.ManagedUserId, assetId = ViewBag.AssetId, sortOrder = ViewBag.CurrentSort, currentSearch = ViewBag.CurrentSearch, InvoiceItemId = ViewBag.InvoiceItemId }, new { @class = ViewBag.ShowConnectedAssets != null ? "small text-decoration-none font-weight-bold" : "small text-decoration-none" })
                }
                @foreach (var item in Model.Select(x => x.AssetCategories).FirstOrDefault().OrderBy(x => x.Name))
                {
                    @Html.ActionLink(item.Name + ", ", "Index", "UserAsset", new { assetCategory = item.Name, activeStatus = ViewBag.ActiveStatus, muId = ViewBag.ManagedUserId, assetId = ViewBag.AssetId, showConnectedAssets = ViewBag.ShowConnectedAssets, sortOrder = ViewBag.CurrentSort, currentSearch = ViewBag.CurrentSearch, InvoiceItemId = ViewBag.InvoiceItemId }, new { @class = ViewBag.AssetCategory != null ? "small text-decoration-none font-weight-bold" : "small text-decoration-none" })
                }
                @if (ViewBag.AssetCategory != null)
                {
                    foreach (var item in Model.Select(x => x.Manufacturers).FirstOrDefault().OrderBy(x => x.Name))
                    {
                        @Html.ActionLink(item.Name + ", ", "Index", "UserAsset", new { manuId = item.Id, assetCategory = ViewBag.AssetCategory, activeStatus = ViewBag.ActiveStatus, muId = ViewBag.ManagedUserId, assetId = ViewBag.AssetId, showConnectedAssets = ViewBag.ShowConnectedAssets, sortOrder = ViewBag.CurrentSort, currentSearch = ViewBag.CurrentSearch, InvoiceItemId = ViewBag.InvoiceItemId }, new { @class = ViewBag.Manufacturer != null ? "small text-decoration-none font-weight-bold" : "small text-decoration-none" })
                    }
                }
                @if (ViewBag.Manufacturer != null)
                {

                    foreach (var item in Model.Select(x => x.Products).FirstOrDefault().OrderBy(x => x.Name))
                    {
                        @Html.ActionLink(item.Name + ", ", "Index", "UserAsset", new { muId = ViewBag.ManagedUserId, productId = item.Id, manuId = ViewBag.Manufacturer, assetCategory = ViewBag.AssetCategory, activeStatus = ViewBag.ActiveStatus, assetId = ViewBag.AssetId, showConnectedAssets = ViewBag.ShowConnectedAssets, sortOrder = ViewBag.CurrentSort, currentSearch = ViewBag.CurrentSearch, InvoiceItemId = ViewBag.InvoiceItemId }, new { @class = ViewBag.Product != null ? "small text-decoration-none font-weight-bold" : "small text-decoration-none" })
                    }
                }
                <small>|</small>
            </div>

            <div class="col-xl-3 form-inline text-xl-right d-sm-table d-md-table d-lg-table d-xl-table d-print-none pt-2 pt-xl-0">
                @Html.TextBox("SearchString", ViewBag.CurrentSearch as string, new { @class = "form-control form-control-sm", @placeholder = "Search", @style = "width: 200px;", @maxlength = "30" })
                <input type="submit" value="Search" class="btn btn-secondary btn-sm" style="margin-left: 5px;" />
            </div>
        </div>

    }
</div>

<div class="container maxwidth">

    <table class="table table-striped table-bordered" style="vertical-align:middle;">
        <thead>
            <tr>
                <th scope="col" class="text-center d-print-none" style="width: 50px;">
                    @Html.ActionLink("C", "Index", new { muId = ViewBag.ManagedUserId, manuId = ViewBag.Manufacturer, productId = ViewBag.Product, activeStatus = ViewBag.ActiveStatus, sortOrder = ViewBag.CategorySortOrder, assetId = ViewBag.AssetId, showConnectedAssets = ViewBag.ShowConnectedAssets, currentSearch = ViewBag.CurrentSearch, InvoiceItemId = ViewBag.InvoiceItemId }, new { @Title = "Hardware Category" })
                </th>
                @if (ViewBag.AssetCategory == "Desktop" || ViewBag.AssetCategory == "Laptop" || ViewBag.AssetCategory == "Server" || ViewBag.AssetCategory == "Switch")
                {
                    <th scope="col" class="w-auto d-none d-sm-none d-md-none d-lg-none d-xl-table-cell d-print-table-cell">
                        @Html.ActionLink("Name", "Index", new { muId = ViewBag.ManagedUserId, manuId = ViewBag.Manufacturer, productId = ViewBag.Product, assetCategory = ViewBag.AssetCategory, activeStatus = ViewBag.ActiveStatus, assetId = ViewBag.AssetId, showConnectedAssets = ViewBag.ShowConnectedAssets, sortOrder = ViewBag.NameSortOrder, currentSearch = ViewBag.CurrentSearch, InvoiceItemId = ViewBag.InvoiceItemId }, new { @Title = "Name" })
                    </th>
                }
                else
                {
                    <th scope="col" class="w-auto d-none d-sm-none d-md-none d-lg-none d-xl-table-cell d-print-table-cell">
                        @Html.ActionLink("Make", "Index", new { muId = ViewBag.ManagedUserId, manuId = ViewBag.Manufacturer, productId = ViewBag.Product, assetCategory = ViewBag.AssetCategory, activeStatus = ViewBag.ActiveStatus, assetId = ViewBag.AssetId, showConnectedAssets = ViewBag.ShowConnectedAssets, sortOrder = ViewBag.ManuSortOrder, currentSearch = ViewBag.CurrentSearch, InvoiceItemId = ViewBag.InvoiceItemId }, new { @Title = "Make" })
                    </th>
                }
                <th scope="col" class="w-auto d-none d-sm-none d-md-table-cell d-lg-table-cell d-xl-table-cell d-print-table-cell">
                    @Html.ActionLink("Model", "Index", new { muId = ViewBag.ManagedUserId, manuId = ViewBag.Manufacturer, productId = ViewBag.Product, assetCategory = ViewBag.AssetCategory, activeStatus = ViewBag.ActiveStatus, assetId = ViewBag.AssetId, showConnectedAssets = ViewBag.ShowConnectedAssets, sortOrder = ViewBag.ProductSortOrder, currentSearch = ViewBag.CurrentSearch, InvoiceItemId = ViewBag.InvoiceItemId }, new { @Title = "Model" })
                </th>
                <th scope="col" class="w-auto d-none d-sm-table-cell d-md-table-cell d-lg-table-cell d-xl-table-cell d-print-table-cell">
                    @Html.ActionLink("AssetTag", "Index", new { muId = ViewBag.ManagedUserId, manuId = ViewBag.Manufacturer, productId = ViewBag.Product, assetCategory = ViewBag.AssetCategory, activeStatus = ViewBag.ActiveStatus, assetId = ViewBag.AssetId, showConnectedAssets = ViewBag.ShowConnectedAssets, sortOrder = ViewBag.AssetSortOrder, currentSearch = ViewBag.CurrentSearch, InvoiceItemId = ViewBag.InvoiceItemId }, new { @Title = "Asset Tag" })
                </th>
                <th scope="col" class="w-auto">
                    @Html.ActionLink("Serial", "Index", new { muId = ViewBag.ManagedUserId, manuId = ViewBag.Manufacturer, productId = ViewBag.Product, assetCategory = ViewBag.AssetCategory, activeStatus = ViewBag.ActiveStatus, assetId = ViewBag.AssetId, showConnectedAssets = ViewBag.ShowConnectedAssets, sortOrder = ViewBag.SerialSortOrder, currentSearch = ViewBag.CurrentSearch, InvoiceItemId = ViewBag.InvoiceItemId }, new { @Title = "Serial" })
                </th>
                <th scope="col" class="w-auto text-center">
                    @Html.ActionLink("Loc", "Index", new { muId = ViewBag.ManagedUserId, manuId = ViewBag.Manufacturer, productId = ViewBag.Product, assetCategory = ViewBag.AssetCategory, activeStatus = ViewBag.ActiveStatus, assetId = ViewBag.AssetId, showConnectedAssets = ViewBag.ShowConnectedAssets, sortOrder = ViewBag.LocationSortOrder, currentSearch = ViewBag.CurrentSearch, InvoiceItemId = ViewBag.InvoiceItemId }, new { @Title = "Location" })
                </th>
                <th scope="col" class="w-auto d-none d-sm-none d-lg-none d-xl-table-cell d-print-table-cell">
                    @Html.ActionLink("Building", "Index", new { muId = ViewBag.ManagedUserId, manuId = ViewBag.Manufacturer, productId = ViewBag.Product, assetCategory = ViewBag.AssetCategory, activeStatus = ViewBag.ActiveStatus, assetId = ViewBag.AssetId, showConnectedAssets = ViewBag.ShowConnectedAssets, sortOrder = ViewBag.BuildingSortOrder, currentSearch = ViewBag.CurrentSearch, InvoiceItemId = ViewBag.InvoiceItemId }, new { @Title = "Building" })
                </th>
                <th scope="col" class="w-auto text-center d-none d-sm-none d-md-none d-lg-table-cell d-xl-table-cell d-print-table-cell">
                    @Html.ActionLink("Room", "Index", new { muId = ViewBag.ManagedUserId, manuId = ViewBag.Manufacturer, productId = ViewBag.Product, assetCategory = ViewBag.AssetCategory, activeStatus = ViewBag.ActiveStatus, assetId = ViewBag.AssetId, showConnectedAssets = ViewBag.ShowConnectedAssets, sortOrder = ViewBag.RoomSortOrder, currentSearch = ViewBag.CurrentSearch, InvoiceItemId = ViewBag.InvoiceItemId }, new { @Title = "Room" })
                </th>
                <th scope="col" class="w-auto text-center d-print-none">
                    @Html.ActionLink("ItemNo", "Index", new { muId = ViewBag.ManagedUserId, manuId = ViewBag.Manufacturer, productId = ViewBag.Product, assetCategory = ViewBag.AssetCategory, activeStatus = ViewBag.ActiveStatus, assetId = ViewBag.AssetId, showConnectedAssets = ViewBag.ShowConnectedAssets, sortOrder = ViewBag.InvoiceSortOrder, currentSearch = ViewBag.CurrentSearch }, new { @Title = "Item Number" })
                </th>
                <th scope="col" class="w-auto text-center d-none d-sm-none d-md-none d-lg-table-cell d-xl-table-cell d-print-table-cell">
                    @Html.ActionLink("Confirmed", "Index", new { muId = ViewBag.ManagedUserId, manuId = ViewBag.Manufacturer, productId = ViewBag.Product, assetCategory = ViewBag.AssetCategory, activeStatus = ViewBag.ActiveStatus, assetId = ViewBag.AssetId, showConnectedAssets = ViewBag.ShowConnectedAssets, sortOrder = ViewBag.AssignedUserSortOrder, currentSearch = ViewBag.CurrentSearch, InvoiceItemId = ViewBag.InvoiceItemId }, new { @Title = "Assigned User" })
                </th>
                <th scope="col" style="width: 50px;" class="d-print-none"></th>
            </tr>
        </thead>
        <tbody class="align-text-bottom">
            @{
                Html.RenderPartial("_List");
            }
        </tbody>
    </table>

    <div class="row mb-1">
        <div class="col-sm-4" style="margin-bottom:5px;">
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
        </div>
        <div class="col-sm-8 form-inline text-right">
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page, muId = ViewBag.ManagedUserId, manuId = ViewBag.Manufacturer, productId = ViewBag.Product, assetCategory = ViewBag.AssetCategory, activeStatus = ViewBag.ActiveStatus, assetId = ViewBag.AssetId, showConnectedAssets = ViewBag.ShowConnectedAssets, sortOrder = ViewBag.CurrentSort, currentSearch = ViewBag.CurrentSearch, invoiceItemId = ViewBag.InvoiceItemId }))
        </div>
    </div>
</div>


@{
    Html.RenderPartial("../UserAsset/_Confirm");
}

@section Scripts {

    <script type="text/javascript">

        $('.selectpicker').selectpicker({
            liveSearch: true,
            style: 'btn-light, text-dark',
            size: 10,
            dropupAuto: true,
        });

        $('.confirm').click(function () {

            var Id = $(this).data('id');
            //console.log(Id);

            $.ajax({
                type: "GET",
                url: "UserAsset/ConfirmAsset" + "?Id=" + Id,
                success: function (result) {

                    //var obj = JSON.parse(JSON.stringify(result.data));
                    if (result.AssetInfo) {
                        $("#ConfirmAssetForm #Description").html(result.AssetInfo);
                        $("#ConfirmAssetForm #UserId").val(result.UserId);
                        $("#ConfirmAssetForm #AssetId").val(result.AssetId);

                        $("#ConfirmAssetModalLabel").html("Confirm Asset");
                        $("#ConfirmAssetModal #btn-add").show();
                        $("#ConfirmAssetModal").modal({});
                    }
                    console.log(result.Message);

                },
                error: function () {
                    console.log("Error Getting Asset Confirmation");
                }
            })
        })

        $("#ConfirmAssetForm #btn-add").click(function () {

            console.log("add");

            var data = $("#ConfirmAssetForm").serialize();

            $.ajax({
                type: "POST",
                url: "UserAsset/ConfirmAsset",
                data: data,
                success: function (result) {

                    if (result.Confirmed) {
                        $("#ConfirmAssetModal").modal("hide");
                        window.location.reload();
                    }
                    console.log(result.Message);
                },
                error: function (result) {
                    console.log("Error Confirming Asset");
                }
            })
        })


    </script>

}